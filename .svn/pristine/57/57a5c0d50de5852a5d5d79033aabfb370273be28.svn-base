var FromDate;
var ToDate;
var date = new Date();
var startdate =
    date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate();
var enddate =
    date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate();
var dtCustomer;

$(document).ready(function () {
    BindCity();
    FromDate = moment();
    ToDate = moment();

    $("#btnDate").daterangepicker(
        {
            ranges: {
                Today: [moment(), moment()],
                Yesterday: [
                    moment().subtract("days", 1),
                    moment().subtract("days", 1),
                ],
                "Last 7 Days": [moment().subtract("days", 6), moment()],
                "Last 30 Days": [moment().subtract("days", 29), moment()],
                "This Month": [
                    moment().startOf("month"),
                    moment().endOf("month"),
                ],
                "Last Month": [
                    moment().subtract("month", 1).startOf("month"),
                    moment().subtract("month", 1).endOf("month"),
                ],
            },
            FromDate: moment(),
            ToDate: moment(),
        },
        getDate
    );

    getDate(FromDate, ToDate);
    //datatable
    customerOrderList();
});

function getDate(start, end) {
    startdate = start.format("YYYY-MM-DD");
    enddate = end.format("YYYY-MM-DD");
    if (dtCustomer) {
        dtCustomer.draw();
    }

    $("#btnDate span").html(
        start.format("MMMM D, YYYY") + " - " + end.format("MMMM D, YYYY")
    );
}

//filter
$("#ddlState,#ddlCity").change(function () {
    customerOrderList();
});

//datatable
function customerOrderList() {
    var state_id =
        $("#ddlState option:selected").val() == undefined
            ? 0
            : $("#ddlState option:selected").val();
    var city_id =
        $("#ddlCity option:selected").val() == undefined
            ? 0
            : $("#ddlCity option:selected").val();

    dtCustomer = $("#tblCustomerOrders").DataTable({
        processing: true,
        serverSide: true,
        order: [[0, "ASC"]],
        bDestroy: true,
        ajax: {
            url: "/customerorder/data",
            data: function (data) {
                data.startdate = startdate;
                data.enddate = enddate;
                data.state_id = state_id;
                data.city_id = city_id;
            },
        },
        fnRowCallback: serialNoCount,
        columns: [
            { data: "id", orderable: false },
            { data: "order_no" },
            {
                data: "transaction_date",
                render: function (data, type, row) {
                    // Parse the date string into a Date object
                    var date = new Date(data);

                    // Format the date using the moment.js library
                    return moment(date).format("DD-MM-YYYY hh:mm a");
                },
            },
            { data: "customer_name" },
            { data: "hub_name" },
            { data: "total_qty" },
            { data: "grand_total" },
            {
                data: "payment_method",
                render: function (data, type, row) {
                    return `<a class="badge bg-label-success">${row.payment_method}</a>`;
                },
            },
            {
                data: "order_status",
                render: function (data, type, row) {
                    // var list =
                    //     "<div class='text-muted p-1'><small class='bg-light p-1'>" +
                    //     row.status +
                    //     "</small></div>";
                    return `<a class="badge bg-label-${row.status_color_css}">${row.status}</a>`;
                },
            },
            { data: "action", orderable: false },
        ],
    });
}
