<?php

namespace App\Http\Controllers\Admin\OrderManagement;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Hub;
use App\Traits\Common;
use Illuminate\Support\Facades\Auth;
use App\Enums\StatusTypes;

class InvoiceDownloadedOrdersController extends Controller
{
  use Common;
  public function invoiceDownloadedOrders(Request $request)
  {
    try {

      $state = $this->getStates();
      $order = $this->getAllOrders()->get();
      //To load list based type(All,Today,ThisMonth)
      $type = $request->input('type');
      return view('admin.order_management.invoice_downloaded_orders', compact('type', 'order', 'state'));
    } catch (\Exception $e) {
      $this->Log(__FUNCTION__, "GET", $e->getMessage(), Auth::user()->id, request()->ip(), gethostname());
    }
  }

  public function invoiceDownloadedOrdersData(Request $request)
  {
    try {

      $customerOrder = "";
      $query = $this->getAllOrders()
        ->where('is_invoice_downloaded', 1)
        ->whereRaw("DATE(orders.transaction_date) BETWEEN '{$request->startdate}' AND '{$request->enddate}'");

      if ($request->state_id > 0) {
        $query = $query->where('customer_addresses.state_id', $request->state_id);
      }
      if ($request->city_id > 0) {
        $query = $query->where('customer_addresses.city_id', $request->city_id);
      }
      if ($request->hub_id > 0) {
        $query = $query->where('hubs.id', $request->hub_id);
      }

      $customerOrder = $query->get();
      return datatables()->of($customerOrder)
        ->addColumn('action', function ($row) {
          $html = '<a href="/orderdetail/' . $row->id . '" class="btn btn-primary">View</a>';
          return $html;
        })
        ->toJson();
    } catch (\Exception $e) {
      $this->Log(__FUNCTION__, "GET", $e->getMessage(), Auth::user()->id, request()->ip(), gethostname());
    }
  }

  public function getHubByCity(Request $request)
  {
    $hub_name = "";
    $query = Hub::where('is_active', 1)
      ->whereNull('deleted_at')
      ->orderBy('hub_name', 'asc')
      ->select('hub_name', 'id', 'is_active');
    if ($request->state_id > 0) {
      $query = $query->where('hubs.state_id', $request->state_id);
    }
    if ($request->city_id > 0) {
      $query = $query->where('hubs.city_id', $request->city_id);
    }
    $hub_name = $query->get();

    return response()->json([
      'hub_name' => $hub_name
    ]);
  }
}
