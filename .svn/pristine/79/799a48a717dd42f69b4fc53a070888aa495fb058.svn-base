<?php

namespace App\Http\Controllers\Admin\ProductsManagement;

use App\Http\Controllers\Controller;
use App\Models\Category;
use Intervention\Image\Facades\Image;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class CategoryController extends Controller
{
    public function category()
    {
        return view('admin.product_management.category.category');
    }

    public function addCategory(Request $request)
    {
        $request->validate([
            'txtCategoryName' => 'required',
            'txtCategoryDescription' => 'required',
            'CategoryImage' => 'required'
        ]);

        if ($request->hdCategoryId == null) {

            $image = $request->file('CategoryImage');
            $name_gen = hexdec(uniqid()) . '.' . $image->getClientOriginalExtension();
            image::make($image)->save('upload/category/' . $name_gen);
            $save_url = 'upload/category/' . $name_gen;

            Category::create([
                'category_name' => $request->txtCategoryName,
                'category_desc' => $request->txtCategoryDescription,
                'category_image' => $save_url,
                'created_by' => Auth::user()->id
            ]);
        } else {
                $images = $request->file('CategoryImage');
                $name_gen = hexdec(uniqid()) . '.' . $images->getClientOriginalExtension();
                image::make($images)->save('upload/category/' . $name_gen);
                $save_url = 'upload/category/' . $name_gen;

            Category::findorfail($request->hdCategoryId)->update([
                'category_name' => $request->txtCategoryName,
                'category_desc' => $request->txtCategoryDescription,
                'category_image' => $save_url,
                'updated_by' => Auth::user()->id
            ]);
        }

        $notification = array(
            'message' => 'Category Created Successfully',
            'alert-type' => 'success'
        );
        return redirect()->route('category')->with($notification);
    }

    public function deleteCategory($id)
    {
        $category = Category::findorfail($id);
        $category->delete();
        $category->update([
            'deleted_by' => Auth::user()->id
        ]);

        $notification = array(
            'message' => 'Category Deleted Successfully',
            'alert-type' => 'success'
        );
        return redirect()->route('category')->with($notification);
    }


    public function getCategoryById($id)
    {
        $category = Category::select('categories.*')->where('categories.id', $id)->first();
        return response()->json([
            'category' => $category
        ]);
    }

    public function getCategoryData(Request $request)
    {
        $categoryData = Category::select('categories.*')->get();

        return datatables()->of($categoryData)
            ->addColumn('action', function ($row) {
                $html = '<i class="text-primary ti ti-pencil me-1"
                onclick="doEdit(' . $row->id . ');"></i> ';
                $html .= '<i class="text-danger ti ti-trash me-1" id="confrim-color(' . $row->id . ')" onclick="showDelete(' . $row->id . ');"></i>';
                return $html;
            })->toJson();
    }

    public function activeStatus($id, $status)
    {
        Category::findorfail($id)->update([
            'is_active' => $status,
            'updated_by' => Auth::user()->id
        ]);
    }
}
