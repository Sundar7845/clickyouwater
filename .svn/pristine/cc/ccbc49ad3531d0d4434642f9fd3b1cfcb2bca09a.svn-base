$(document).ready(function () {
    listManufacturer();
    BindCity();
    BindArea();
});

$("#ddlState,#ddlCity,#ddlArea").change(function () {
    listManufacturer();
});

function listManufacturer() 
{
    var state_id = ($("#ddlState option:selected").val() == undefined ? 0 : $("#ddlState option:selected").val());
    var city_id = ($("#ddlCity option:selected").val() == undefined ? 0 : $("#ddlCity option:selected").val());
    var area_id = ($("#ddlArea option:selected").val() == undefined ? 0 : $("#ddlArea option:selected").val());

    $("#tblManufacturer").DataTable({
        processing: true,
        serverSide: true,
        order: [[0, "ASC"]],
        "bDestroy": true,
        ajax: "manufacturerData?state_id=" + state_id + "&city_id=" + city_id + "&area_id=" + area_id,
        fnRowCallback: function (nRow, aData, iDisplayIndex) {
            $("td:first", nRow).html(iDisplayIndex + 1);
            return nRow;
        },
        columns: [
            { data: "id" },
            { data: "manufacturer_id" },
            { data: "manufacturer_name" },
            { data: "pincode" },
            {
                data: "document_view",
                render: function (data, type, row) {
                    return `<a href="manufacturerdocument"
                    class="badge bg-label-warning">View</a>`;
                },
            },
            {
                data: "is_active",
                render: function (data, type, row) {
                    return `<label class="switch">
                            <input onclick="doStatus(${
                                row.id
                            });" id="chkManufacturer${
                        row.id
                    }" type="checkbox" class="switch-input"
                            name="chkManufacturer" '  ${
                                data == 1 ? "checked" : ""
                            } ' />
                            <span class="switch-toggle-slider">
                                <span class="switch-on"></span>
                                <span class="switch-off"></span>
                            </span>
                        </label>`;
                },
            },
            { data: "action" },
        ],
    });
}

//Update Status
function doStatus(id) {
    var status = $("#chkManufacturer" + id).is(":checked");
    confirmStatusChange(
        id,
        "manufacturer/",
        "tblManufacturer",
        status == true ? 1 : 0,
        "chkManufacturer"
    );
}

//Delete Data
function showDelete(id) {
    confirmDelete(id, "delete/manufacturer/", "tblManufacturer");
}

//Third Party Tie-up
$("#chkIsThirdParty").click(function () {
    if ($("#chkIsThirdParty").is(":checked")) {
        $(".ThirdParty").show();
    } else {
        $(".ThirdParty").hide();
    }
});

//Validation
$(function () {
    $("form[name='manufacture']").validate({
        rules: {
            txtManufacturerName: "required",
            txtMobile: "required",
            txtOffEmail: "required",
            txtLatitude: "required",
            txtLongtitude: "required",
            txtGeoLocation: "required",
            txtCreditPeriod: "required",
            txtSettlementPeriod: "required",
            password: "required",
            password_confirmation: "required",
            yearOfExp: "required",
            txtNoOfBrands: "required",
            txtAnnualTurnOver: "required",
            txtSecurityDeposit: "required",
            ddlState: "required",
            ddlCity: "required",
            ddlArea: "required",
            txtAddress: "required",
            txtPincode: "required",
            comm_pincode: "required",
            txtProprietorName: "required",
            txtProprietorMobile: "required",
            txtProprietorEmail: "required",
            txtContactPersonName: "required",
            txtContactPersonMobile: "required",
            txtContactPersonEmail: "required",
        },
        messages: {
            required: "This field is required",
        },
        errorPlacement: function (error, element) {
            if (element.is(":radio")) {
                error.appendTo(element.parents(".form-group"));
            } else {
                // This is the default behavior
                // error.insertAfter(element);
                if (element.siblings(".error").html() == undefined) {
                    error.appendTo(element.parent().next(".error"));
                } else {
                    error.appendTo(element.siblings(".error"));
                }
            }
        },
        submitHandler: function (form) {
            form.submit();
        },
    });
});
