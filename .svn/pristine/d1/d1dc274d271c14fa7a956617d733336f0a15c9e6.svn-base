<?php

namespace App\Traits;

use App\Models\Area;
use App\Models\City;
use App\Models\Menu;
use App\Models\Role;
use App\Models\State;
use App\Models\User;
use App\Models\UserRolePermission;

trait Common
{
    public function getStates($country_id)
    {
        return State::where("country_id", $country_id)->get(["country_name", "id"]);
    }

    public function getCities($state_id)
    {
        return City::where("state_id", $state_id)->get(["city_name", "id"]);
    }

    public function getAreas($city_id)
    {
        return Area::where("city_id", $city_id)->get()->toArray();
    }

    public function checkUserPermission($user_id)
    {
        $userPermission = UserRolePermission::select('menu_id')->where('user_id', $user_id)->get()->toArray();
        $getMenuId = explode(',', $userPermission['menu_id'] ?? 0);
        $checkpermission = Menu::whereIn('id', [$getMenuId])->first();
        if ($checkpermission) {
            return true;
        } else {
            return false;
        }
    }

    public function fileUpload($fileinput, $filepath, $fileName)
    {
        $fileinput->move(public_path($filepath), $fileName);
        return $filepath . '/' . $fileName;
    }

    public function generateRandom($digit)
    {
        switch ($digit) {
            case 8:
                return mt_rand(10000000, 99999999);
            case 16:
                return mt_rand(1000000000000000, 9999999999999999);
            default:
                return mt_rand(100000, 999999);
        }
    }

    public function getRolesForDropDown()
    {
        $role_id = [1, 3, 4, 5, 6, 17];
        $roles = Role::whereNotIn('id', $role_id)->get();

        return $roles;
    }

    public function getUserRolesForDropDown()
    {
        $role_id = [1, 3, 4, 5, 6, 17];
        $users = User::where('is_active',1)->whereNotIn('role_id', $role_id)->get();

        return $users;
    }
}
